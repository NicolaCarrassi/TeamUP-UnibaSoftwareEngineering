<?php

namespace App\Http\Controllers\admin;

use Carbon\Carbon;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use Illuminate\Support\Facades\DB;

class AdminController extends AbstractAdminController {

    const CLOSEDATE = 'closedate';
    const HIDDENID_REPORT = 'hiddenid_report';
    const BAN = 'ban';
    const HIDDENID_USER_REPORT = 'hiddenid_user_reported';

    public function showAllReports($admin) {

        //$all_reports_projects = $this->getProgetti(-1);
        $all_reports_users = $this->getSegnalazioni(-1);

        return view('admin.adminsegnalazioni',[
            'admin' => $this->getAdmin($admin),
            'all_reports_users' => $all_reports_users
        ]);
    }

    public function showAllIdeas($admin) {

        $all_ideas = $this->getIdee(-1);

        return view('admin.adminidee',[
            'admin' => $this->getAdmin($admin),
            'all_ideas' => $all_ideas
        ]);
    }

    public function acceptReport(Request $request,$report) {

        //dd($request);

        $data = $request->all();
        $now = now()->toDateString();

        if(!$data[self::BAN]) {
            $request->validate([
                self::CLOSEDATE => 'required | date | after_or_equal: ' . $now,
            ]);

            DB::update('update report_users set closed_at=timestamp("'.$data[self::CLOSEDATE].'") where id='.$data[self::HIDDENID_REPORT].';');
            DB::update('update users set report_end=timestamp("'.$data[self::CLOSEDATE].'") where id='.$data[self::HIDDENID_USER_REPORT].';');
        }

        DB::update('update report_users set managed='.$report.' where id='.$data[self::HIDDENID_REPORT].';');
        DB::update('update users set is_banned='.$data[self::BAN].' where id='.$data[self::HIDDENID_USER_REPORT].';');

        return redirect()->back();

    }

    public function deleteIdea($ideaid) {
        DB::delete('delete from projects where id='.$ideaid.';');
        
        return redirect()->back();
    }

}
